# 👥 Authors & Contributors

This file lists all contributors to this ALX educational project.

---

## 🎓 Primary Author(s)

**Chigbu Joshua**
- 📧 Email: [chigbujoshua@yahoo.com](mailto:chigbujoshua@yahoo.com)
- 🐙 GitHub: [@yungryce](https://github.com/yungryce)
- 🎯 Role: ALX Software Engineering Student
- 📅 Contribution Period: February 2024 - June 2025

---

## 🤝 Additional Contributors

*No additional contributors for this individual educational project*

---

## 🙏 Acknowledgments

- **ALX Africa**: For providing the educational framework and guidance
- **Holberton School**: For the foundational curriculum and methodology
- **Open Source Community**: For the tools and libraries that make learning possible

---

## 📖 About This Project

This Monty interpreter project is part of the ALX Software Engineering Program's low-level programming and algorithms specialization. It demonstrates comprehensive understanding of:

- Stack and queue data structure implementation
- Interpreter design and language implementation
- Systems programming and memory management
- File processing and command-line interfaces
- Error handling and robust software design

## 📜 Educational Context

**Program**: ALX Software Engineering  
**Cohort**: 2024/2025  
**Specialization**: Low-Level Programming & Algorithms  
**Project Category**: Data Structures & Language Implementation  
**Difficulty Level**: Intermediate  

## 🎯 Project Highlights

- **Complete Interpreter**: Full implementation of Monty 0.98 bytecode language
- **Brainf*ck Integration**: Advanced esoteric programming language support
- **Dynamic Mode Switching**: Runtime switching between stack and queue behaviors
- **Comprehensive Testing**: Extensive test suite with edge case coverage
- **Professional Standards**: Industry-grade error handling and documentation

---

*This project represents independent work completed as part of the ALX Software Engineering curriculum, demonstrating mastery of systems programming, data structures, and language implementation principles.*
